{"version":3,"sources":["components/TodoApp/TodoApp.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["TodoApp","state","title","handleChange","event","setState","target","value","handleKeyPress","key","newTask","id","uuid","completed","props","addNewTodo","this","type","className","placeholder","onChange","onKeyPress","React","Component","TodoItem","onDeleteTodo","onUpdateCompleted","cn","checked","htmlFor","onClick","TodoList","todos","onToggleCompleted","length","map","todo","App","filter","prevState","deleteTodo","handleCompleted","toggleAllCompleted","deleteCompleted","filterTodos","handleFilters","persistedtodos","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","uncompletedTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f30e540b.chunk.js","sourcesContent":["import React from 'react';\nimport uuid from 'uuid/v4';\nimport PropTypes from 'prop-types';\n\nexport class TodoApp extends React.Component {\n  state = {\n    title: '',\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  handleKeyPress = (event) => {\n    const { title } = this.state;\n\n    if (event.key === 'Enter') {\n      const newTask = {\n        title,\n        id: uuid(),\n        completed: false,\n      };\n\n      this.props.addNewTodo(newTask);\n\n      this.setState({\n        title: '',\n      });\n    }\n  }\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={title}\n        onChange={this.handleChange}\n        onKeyPress={this.handleKeyPress}\n      />\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  addNewTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport const TodoItem = (props) => {\n  const { title, id, completed, onDeleteTodo, onUpdateCompleted } = props;\n\n  return (\n    <li className={cn({ completed })}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={id}\n          onChange={onUpdateCompleted}\n          checked={completed ? 'checked' : ''}\n        />\n        <label htmlFor={id}>{title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={onDeleteTodo}\n        />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  onDeleteTodo: PropTypes.func.isRequired,\n  onUpdateCompleted: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nexport const TodoList = (props) => {\n  const {\n    todos,\n    onDeleteTodo,\n    onUpdateCompleted,\n    onToggleCompleted,\n  } = props;\n\n  return (\n    <div>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        onClick={onToggleCompleted}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n      {todos.length > 0 && (\n        <ul className=\"todo-list\">\n          {todos.map(todo => (\n            <TodoItem\n              key={todo.id}\n              {...todo}\n              onDeleteTodo={() => onDeleteTodo(todo.id)}\n              onUpdateCompleted={() => onUpdateCompleted(todo.id)}\n            />\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n  onDeleteTodo: PropTypes.func.isRequired,\n  onUpdateCompleted: PropTypes.func.isRequired,\n  onToggleCompleted: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp/TodoApp';\nimport { TodoList } from './components/TodoList/TodoList';\n\nexport class App extends React.Component {\n  state = {\n    todos: [],\n    filter: 'All',\n  }\n\n  componentDidMount() {\n    const persistedtodos = localStorage.getItem('todos');\n\n    if (persistedtodos) {\n      const todos = JSON.parse(persistedtodos);\n\n      this.setState({ todos });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.todos !== this.state.todos) {\n      localStorage.setItem('todos', JSON.stringify(this.state.todos));\n    }\n  }\n\n  addNewTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        todo,\n      ],\n    }));\n  }\n\n  deleteTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== id),\n    }));\n  };\n\n  handleCompleted = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (\n        (todo.id === id)\n          ? {\n            ...todo,\n            completed: !todo.completed,\n          }\n          : todo\n      )),\n    }));\n  };\n\n  toggleAllCompleted = (event) => {\n    if (event.target.checked) {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => ({\n          ...todo, completed: true,\n        })),\n      }));\n    } else {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => ({\n          ...todo, completed: false,\n        })),\n      }));\n    }\n  }\n\n  deleteCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  }\n\n  filterTodos = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      filter: value,\n    });\n  }\n\n  handleFilters = () => {\n    const { filter, todos } = this.state;\n\n    switch (filter) {\n      case 'Active': return todos.filter(todo => !todo.completed);\n      case 'Completed': return todos.filter(todo => todo.completed);\n      default: return todos;\n    }\n  }\n\n  render() {\n    const { todos } = this.state;\n\n    const uncompletedTodo = [...todos].filter(todo => todo.completed === false);\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <TodoApp addNewTodo={this.addNewTodo} />\n        </header>\n\n        <section className=\"main\">\n          <TodoList\n            todos={this.handleFilters()}\n            onDeleteTodo={this.deleteTodo}\n            onUpdateCompleted={this.handleCompleted}\n            onToggleCompleted={this.toggleAllCompleted}\n          />\n        </section>\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            Items left:\n            {uncompletedTodo.length}\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <button\n                type=\"button\"\n                className=\"selected\"\n                onClick={this.filterTodos}\n                value=\"All\"\n              >\n              All\n              </button>\n            </li>\n\n            <li>\n              <button\n                type=\"button\"\n                onClick={this.filterTodos}\n                value=\"Active\"\n              >\n              Active\n              </button>\n            </li>\n\n            <li>\n              <button\n                type=\"button\"\n                onClick={this.filterTodos}\n                value=\"Completed\"\n              >\n                 Completed\n              </button>\n            </li>\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={this.deleteCompleted}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}