{"version":3,"sources":["components/TodoApp/TodoApp.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["TodoApp","state","title","handleChange","event","setState","target","value","handleKeyPress","key","newTask","id","uuid","completed","props","addNewTodo","this","type","className","placeholder","onChange","onKeyPress","React","Component","TodoItem","todo","onDeleteTodo","onUpdateCompleted","cn","checked","htmlFor","onClick","TodoList","todos","onToggleCompleted","length","map","App","filter","prevState","deleteTodo","handleCompleted","toggleAllCompleted","deleteCompleted","filterTodos","handleFilters","cachedTodos","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","uncompletedTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9eb35ffc.chunk.js","sourcesContent":["import React from 'react';\nimport uuid from 'uuid/v4';\nimport PropTypes from 'prop-types';\n\nexport class TodoApp extends React.Component {\n  state = {\n    title: '',\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  handleKeyPress = (event) => {\n    const { title } = this.state;\n\n    if (event.key === 'Enter' && title) {\n      const newTask = {\n        title,\n        id: uuid(),\n        completed: false,\n      };\n\n      this.props.addNewTodo(newTask);\n\n      this.setState({\n        title: '',\n      });\n    }\n  }\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={title}\n        onChange={this.handleChange}\n        onKeyPress={this.handleKeyPress}\n      />\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  addNewTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport const TodoItem = ({ todo, onDeleteTodo, onUpdateCompleted }) => {\n  const {\n    title,\n    id,\n    completed,\n  } = todo;\n\n  return (\n    <li className={cn({ completed })}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={id}\n          onChange={onUpdateCompleted}\n          checked={completed ? 'checked' : ''}\n        />\n        <label htmlFor={id}>{title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={onDeleteTodo}\n        />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  onDeleteTodo: PropTypes.func.isRequired,\n  onUpdateCompleted: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nexport const TodoList = (props) => {\n  const {\n    todos,\n    onDeleteTodo,\n    onUpdateCompleted,\n    onToggleCompleted,\n  } = props;\n\n  return (\n    <div>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        onClick={onToggleCompleted}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n      {todos.length > 0 && (\n        <ul className=\"todo-list\">\n          {todos.map(todo => (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              onDeleteTodo={() => onDeleteTodo(todo.id)}\n              onUpdateCompleted={() => onUpdateCompleted(todo.id)}\n            />\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n  onDeleteTodo: PropTypes.func.isRequired,\n  onUpdateCompleted: PropTypes.func.isRequired,\n  onToggleCompleted: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp/TodoApp';\nimport { TodoList } from './components/TodoList/TodoList';\n\nexport class App extends React.Component {\n  state = {\n    todos: [],\n    filter: 'All',\n  }\n\n  componentDidMount() {\n    const cachedTodos = localStorage.getItem('todos');\n\n    if (cachedTodos) {\n      const todos = JSON.parse(cachedTodos);\n\n      this.setState({ todos });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.todos !== this.state.todos) {\n      localStorage.setItem('todos', JSON.stringify(this.state.todos));\n    }\n  }\n\n  addNewTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        todo,\n      ],\n    }));\n  }\n\n  deleteTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== id),\n    }));\n  };\n\n  handleCompleted = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (\n        (todo.id === id)\n          ? {\n            ...todo,\n            completed: !todo.completed,\n          }\n          : todo\n      )),\n    }));\n  };\n\n  toggleAllCompleted = (event) => {\n    if (event.target.checked) {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => ({\n          ...todo, completed: true,\n        })),\n      }));\n    } else {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => ({\n          ...todo, completed: false,\n        })),\n      }));\n    }\n  }\n\n  deleteCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  }\n\n  filterTodos = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      filter: value,\n    });\n  }\n\n  handleFilters = () => {\n    const { filter, todos } = this.state;\n\n    switch (filter) {\n      case 'Active': return todos.filter(todo => !todo.completed);\n      case 'Completed': return todos.filter(todo => todo.completed);\n      default: return todos;\n    }\n  }\n\n  render() {\n    const { todos } = this.state;\n\n    const uncompletedTodo = todos.filter(todo => todo.completed === false);\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <TodoApp addNewTodo={this.addNewTodo} />\n        </header>\n\n        <section className=\"main\">\n          <TodoList\n            todos={this.handleFilters()}\n            onDeleteTodo={this.deleteTodo}\n            onUpdateCompleted={this.handleCompleted}\n            onToggleCompleted={this.toggleAllCompleted}\n          />\n        </section>\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            Items left:\n            {uncompletedTodo.length}\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <button\n                type=\"button\"\n                className=\"selected\"\n                onClick={this.filterTodos}\n                value=\"All\"\n              >\n              All\n              </button>\n            </li>\n\n            <li>\n              <button\n                type=\"button\"\n                onClick={this.filterTodos}\n                value=\"Active\"\n              >\n              Active\n              </button>\n            </li>\n\n            <li>\n              <button\n                type=\"button\"\n                onClick={this.filterTodos}\n                value=\"Completed\"\n              >\n                 Completed\n              </button>\n            </li>\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={this.deleteCompleted}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}